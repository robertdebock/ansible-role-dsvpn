---
# tasks file for dsvpn
- name: install requirements
  package:
    name: "{{ dsvpn_requirements }}"
    state: present
  register: dsvpn_install_requirements
  until: dsvpn_install_requirements is succeeded
  retries: 3

- name: unarchive
  unarchive:
    src: "{{ dsvpn_release_url }}"
    dest: "{{ dsvpn_temporary_directory }}"
    remote_src: yes
    validate_certs: "{{ dsvpn_validate_certs }}"
  register: dsvpn_unarchive
  until: dsvpn_unarchive is succeeded
  retries: 3

- name: make
  make:
    chdir: "{{ dsvpn_temporary_directory }}/dsvpn-{{ dsvpn_version }}"

- name: install
  copy:
    src: "{{ dsvpn_temporary_directory }}/dsvpn-{{ dsvpn_version }}/dsvpn"
    dest: "{{ dsvpn_install_directory }}/dsvpn"
    remote_src: yes
    mode: '0750'

- name: generate key
  command: dd if=/dev/urandom of={{ dsvpn_key_directory }}/vpn.key count=1 bs=32
  args:
    creates: "{{ dsvpn_key_directory }}/vpn.key"
  delegate_to: localhost

- name: set permissions on key
  file:
    path: "{{ dsvpn_key_directory }}/vpn.key"
    mode: "0644"
  delegate_to: localhost

- name: copy key
  copy:
    src: "{{ dsvpn_key_directory }}/vpn.key"
    dest: "{{ dsvpn_key_directory }}/vpn.key"
    mode: "0640"
    owner: root
    group: root
  notify:
    - restart dsvpn-server
    - restart dsvpn-client

- name: load tun module
  modprobe:
    name: tun
    state: present
  when:
    - ansible_virtualization_type != "docker"

- name: create /dev/net directory
  file:
    path: /dev/net
    state: directory

- name: create character device /dev/net/tun
  command: mknod /dev/net/tun c 10 200
  args:
    creates: /dev/net/tun

- name: create server
  include_tasks: server.yml
  when:
    - dsvpn_role == "server"

- name: create client
  include_tasks: client.yml
  when:
    - dsvpn_role == "client"
